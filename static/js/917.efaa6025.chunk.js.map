{"version":3,"file":"static/js/917.efaa6025.chunk.js","mappings":"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","sources":["apis/createCommentApi.ts","apis/getComments.ts","components/Comments.tsx","components/Loader.tsx","components/utils/getBanglaDate.ts"],"sourcesContent":["import { CommentBody, CommentCreateResponse } from \"../types/comment\";\nimport { CommonResponse } from \"../types/common\";\nimport { fetcher } from \"../utils/fetcher\";\n\nexport async function createCommentsApi(body: CommentBody): Promise<CommentCreateResponse> {\n    const authData = JSON.parse(localStorage.getItem('auth') || '');\n    const token = authData?.token;\n    const url = `${process.env.REACT_APP_API_ORIGIN}/groups/posts/${body.postId}/comments`;\n    // const url = `https://wild-tan-meerkat-robe.cyclic.app/api/groups/posts/${body.postId}/comments`;\n\n    const comment: CommentCreateResponse = await fetcher(url,\n        {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ text: body.text }),\n        })\n\n    return comment;\n}","import { CommentListQueryParams, CommentListResponse } from \"../types/comment\";\nimport { fetcher } from \"../utils/fetcher\";\n\nexport async function getCommentsApi(params: CommentListQueryParams): Promise<CommentListResponse> {\n    const authData = JSON.parse(localStorage.getItem('auth') || '');\n    const token = authData?.token;\n    const url = `${process.env.REACT_APP_API_ORIGIN}/groups/posts/${params.postId}/comments?skip=${params.skip}&limit=${params.limit}`;\n    // let url = `https://wild-tan-meerkat-robe.cyclic.app/api/groups/posts/${params.postId}/comments?skip=${params.skip}&limit=${params.limit}`;\n\n    const comments: CommentListResponse = await fetcher(url,\n        {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n\n    return comments;\n}","import { FormEvent, useEffect, useRef, useState } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createCommentsApi } from \"../apis/createCommentApi\";\nimport { getCommentsApi } from \"../apis/getComments\";\nimport { CommentResponse } from \"../types/comment\";\nimport { Loader } from \"./Loader\";\nimport { getBanglaDate } from \"./utils/getBanglaDate\";\n\nconst LIMIT = 10;\n\nexport default function Comments() {\n    const [comment, setComment] = useState<string>('');\n    const [comments, setComments] = useState<CommentResponse[]>([]);\n    const [skip, setSkip] = useState(0);\n    const navigate = useNavigate();\n    const [authError, setAuthError] = useState<{ flag: boolean, details: string[] }>({ flag: false, details: [] });\n    const [loading, setLoading] = useState<'sendComment' | 'loadComments' | ''>('');\n    const { postId } = useParams<string>();\n    const lastCommentRef = useRef(null);\n    console.log(postId);\n    const handleSubmit = (ev: FormEvent<HTMLFormElement>) => {\n        ev.preventDefault();\n        setLoading('sendComment');\n        createCommentsApi({ postId: postId || '', text: comment })\n            .then((response) => {\n                if (response.code === 200) {\n                    setComments([...comments, response.data]);\n                    setComment('')\n                }\n                setLoading('');\n            })\n            .catch((err) => console.error(err))\n            .finally(() => setLoading(''))\n    }\n\n    useEffect(() => {\n        setLoading('loadComments');\n        getCommentsApi({ limit: LIMIT, skip, postId: postId || '' })\n            .then((commentResponse) => {\n                if (commentResponse.code === 200) {\n                    for (let i = 0; i < commentResponse.data.length; i++) {\n                        commentResponse.data[i].id = commentResponse.data[i]._id;\n                    }\n                    commentResponse.data.reverse();\n                    setComments(commentResponse.data);\n                }\n                else {\n                    setComments([]);\n                }\n            })\n            .catch((err) => console.error(err))\n            .finally(() => setLoading(''));\n    }, [skip]);\n\n    return (\n        <div className=\"m-2\">\n            <div className=\"max-h-96 overflow-scroll\">\n                {loading === 'loadComments' ? <Loader /> :\n                    (<div className=\"m-1 mt-4 text-center h-fit bg-[#20BB96] rounded-lg\">\n                        <button type=\"button\"\n                            className=\"p-1.5 \"\n                            onClick={() => setSkip(skip + LIMIT)}\n                        >\n                            Show More\n                        </button>\n                    </div>)\n                }\n                {\n                    comments?.map((comment, index) => (\n                        <div\n                            className=\"border rounded-lg m-2 p-2\"\n                            ref={(elem) => {\n                                if (index === comments.length - 1) {\n                                    // @ts-ignore\n                                    lastCommentRef.current = elem;\n                                    // @ts-ignore\n                                    lastCommentRef.current?.scrollIntoView({ behavior: 'smooth' });\n                                }\n                            }}\n                            key={comment.id}\n                        >\n                            <div className=\"flex flex-row\">\n                                <div className=\"basis-1/4\">\n                                    <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#EEFAFD\" />\n                                        <path d=\"M18 8C15.38 8 13.25 10.13 13.25 12.75C13.25 15.32 15.26 17.4 17.88 17.49C17.96 17.48 18.04 17.48 18.1 17.49C18.12 17.49 18.13 17.49 18.15 17.49C18.16 17.49 18.16 17.49 18.17 17.49C20.73 17.4 22.74 15.32 22.75 12.75C22.75 10.13 20.62 8 18 8Z\" fill=\"#6299A9\" />\n                                        <path d=\"M23.08 20.1499C20.29 18.2899 15.74 18.2899 12.93 20.1499C11.66 20.9999 10.96 22.1499 10.96 23.3799C10.96 24.6099 11.66 25.7499 12.92 26.5899C14.32 27.5299 16.16 27.9999 18 27.9999C19.84 27.9999 21.68 27.5299 23.08 26.5899C24.34 25.7399 25.04 24.5999 25.04 23.3599C25.03 22.1299 24.34 20.9899 23.08 20.1499Z\" fill=\"#6299A9\" />\n                                    </svg>\n                                    <div className=\"flex\">\n                                        <p className=\"bg-[#E1FFF8] text-[#20BB96] text-[10px] mx-0.5 px-0.5 h-fit\"> {comment.sender.userType === 'teacher' ? 'ফুজালা' : 'আবনা'}</p>\n                                        <p className=\"bg-[#E1FFF8] text-[#20BB96] text-[10px] mx-0.5 px-0.5 h-fit\"> {comment.sender.passingYear}</p>\n                                    </div>\n\n                                    <p className=\"text-xs mt-1\"> {comment.sender.name}</p>\n                                    <p className=\"text-[10px] mt-1\"> {getBanglaDate(new Date(comment.createdAt))}</p>\n                                </div>\n                                <p className=\"basis-3/4  p-1\">\n                                    {comment.text}\n                                </p>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n            <form className=\"m-2 w-full flex justify-center\" action=\"#\" onSubmit={handleSubmit}>\n                <div className=\"m-1\">\n                    <textarea\n                        name=\"comment\"\n                        value={comment}\n                        onChange={(ev) => setComment(ev.target.value)}\n                        className=\"border border-[#20BB96] p-1 rounded-lg w-full\"\n                        placeholder=\"লিখব যা বলতে চাই...\"\n                        required={true} />\n                </div>\n                {\n                    authError.flag && (\n                        <div\n                            className=\"text-red-400 text-xs text-center\"> {authError.details}\n                        </div>\n                    )\n                }\n                {loading === 'sendComment' ? <Loader /> :\n                    (<div className=\"m-1 mt-4 h-fit bg-[#20BB96] rounded-lg\">\n                        <button type=\"submit\" className=\"p-1.5\">\n                            Send\n                        </button>\n                    </div>)\n                }\n            </form>\n        </div>\n    )\n}","export function Loader({ message = 'অনুগ্রহপূর্বক অপেক্ষা করুন...' }: { message?: string }) {\n    return (\n        <div className=\"text-center text-sm\">\n            {message}\n        </div>\n    )\n}","const monthList = [\n    'জানুয়ারী', 'ফেব্রুয়ারী', 'মার্চ', 'এপ্রিল',\n    'মে', 'জুন', 'জুলাই', 'আগস্ট',\n    'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'\n]\n\nexport function getBanglaDate(date: Date | string) {\n    date = new Date(date);\n    const month = date.getMonth();\n    const [yyyy, mm, ddWithTime] = date.toISOString().split('-');\n    const [dd] = ddWithTime.split('T');\n    return `${dd} ${monthList[month]}, ${yyyy}`;\n}"],"names":["body","authData","JSON","parse","localStorage","getItem","token","url","process","postId","fetcher","method","headers","stringify","text","comment","params","skip","limit","comments","Comments","useState","setComment","setComments","setSkip","useNavigate","flag","details","authError","loading","setLoading","useParams","lastCommentRef","useRef","console","log","useEffect","getCommentsApi","then","commentResponse","code","i","data","length","id","_id","reverse","catch","err","error","finally","className","Loader","type","onClick","map","index","ref","elem","current","scrollIntoView","behavior","width","height","viewBox","fill","xmlns","cx","cy","r","d","sender","userType","passingYear","name","getBanglaDate","Date","createdAt","action","onSubmit","ev","preventDefault","createCommentsApi","response","value","onChange","target","placeholder","required","message","monthList","date","month","getMonth","toISOString","split","yyyy","dd"],"sourceRoot":""}