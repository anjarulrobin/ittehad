{"version":3,"file":"static/js/807.d3967faf.chunk.js","mappings":"uKAIO,SAAeA,EAAY,GAAD,+BAwChC,8CAxCM,WAA2BC,GAA6B,kFAsB1D,OArBKC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,IACtDC,EAAgB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,MAEpBC,EAAG,UAAMC,4BAAgC,2BAAmBR,EAAOS,KAAI,kBAAUT,EAAOU,OAGxFV,EAAOW,cACPJ,GAAG,uBAAoBP,EAAOW,cAE9BX,EAAOY,WACPL,GAAG,oBAAiBP,EAAOY,WAE3BZ,EAAOa,QACPN,GAAG,iBAAcP,EAAOa,QAExBb,EAAOc,OACPP,GAAG,gBAAaP,EAAOc,OAGvBd,EAAOe,WACPR,GAAG,oBAAiBP,EAAOe,WAC9B,WAEqCC,EAAAA,EAAAA,GAAQT,EAC1C,CACIU,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAD,OAAYZ,MAEjC,QAPuB,OAAvBa,EAAuB,yBAStBA,GAAK,6CAOf,sB,2ICtCc,SAASC,IACpB,OAA0BC,EAAAA,EAAAA,UAAiB,IAAG,eAAvCF,EAAK,KAAEG,EAAQ,KACtB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAEnB,GAFoC,MAEZH,EAAAA,EAAAA,UAAS,IAAE,eAA5BZ,EAAI,KAAEgB,EAAO,KACpB,GAA8BJ,EAAAA,EAAAA,WAAS,GAAM,eAAtCK,EAAO,KAAEC,EAAU,MAE1BC,EAAAA,EAAAA,YAAU,WACND,GAAW,GACX,IAAMhB,EAAckB,OAAOL,EAAaM,IAAI,gBAC5CC,QAAQC,IAAI,CAAErB,YAAAA,KACdZ,EAAAA,EAAAA,GAAY,CAAEY,YAAAA,EAAaF,KAAMA,EAAMC,MAR7B,KASLuB,MAAK,SAACd,GACH,GAAmB,MAAfA,EAAMe,KAAc,CAAC,IACQ,EADT,UACDf,EAAMgB,MAAI,IAA7B,2BAA+B,CAAC,IAArBC,EAAI,QACXA,EAAKC,GAAKD,EAAKE,GACnB,CAAC,+BACDhB,EAASH,EAAMgB,KACnB,MAEIb,EAAS,GAEjB,IACCiB,OAAM,SAACC,GAAG,OAAKT,QAAQU,MAAMD,EAAI,IACjCE,SAAQ,kBAAMf,GAAW,EAAM,GACxC,GAAG,CAAClB,IAGJ,IAAIkC,EAAY,EAChB,OACI,iBAAKC,UAAU,sBAAqB,UAE5BzB,EAAM0B,KAAI,SAACT,EAAMU,GAAK,OAClB,UAAC,KAAI,CACDC,GAAE,iBAAYX,EAAKC,IACnBO,UAAU,sFAAqF,WAE/F,gBAAKA,UAAU,yEAAwE,WAAKD,KAC5F,iBAAMC,UAAU,OAAM,SAAER,EAAKtB,SAC1B,KAIC,IAAZY,GACI,SAAC,IAAM,KACN,gBAAKkB,UAAU,iDAAgD,UAC5D,mBACII,QAAS,WACLvB,EAAQhB,EA7CtB,GA8CU,EAAE,4BAQ9B,C,oEC/DO,SAASwC,EAAO,GAAsE,IAAD,IAAnEC,QAAAA,OAAO,MAAG,wJAA+B,EAC9D,OACI,gBAAKN,UAAU,sBAAqB,SAC/BM,GAGb,C","sources":["apis/getUsers.ts","components/AllUsers.tsx","components/Loader.tsx"],"sourcesContent":["import { UserListRequestParams, UserListResponse } from \"../types/user\";\nimport { fetcher } from \"../utils/fetcher\";\nimport { UserData } from \"./user-data\";\n\nexport async function getUsersApi(params: UserListRequestParams): Promise<UserListResponse> {\n    const authData = JSON.parse(localStorage.getItem('auth') || '');\n    const token = authData?.token;\n\n    let url = `${process.env.REACT_APP_API_ORIGIN}/users/all?skip=${params.skip}&limit=${params.limit}`;\n    // let url = `https://wild-tan-meerkat-robe.cyclic.app/api/users/all?skip=${params.skip}&limit=${params.limit}`;\n\n    if (params.passingYear) {\n        url += `&passingYear=${params.passingYear}`;\n    }\n    if (params.userType) {\n        url += `&userType=${params.userType}`;\n    }\n    if (params.phone) {\n        url += `&phone=${params.phone}`;\n    }\n    if (params.name) {\n        url += `&name=${params.name}`;\n    }\n\n    if (params.userTags) {\n        url += `&userTags=${params.userTags}`;\n    }\n\n    const users: UserListResponse = await fetcher(url,\n        {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n\n    return users;\n    // return ({\n    //     \"code\": 200,\n    //     \"message\": \"SUCCESS\",\n    //     // @ts-ignore\n    //     \"data\": UserData\n    // })\n}","import { useEffect, useRef, useState } from \"react\";\nimport { Link, useParams, useSearchParams } from \"react-router-dom\";\nimport { getUsersApi } from \"../apis/getUsers\";\nimport { User, UserListRequestParams } from \"../types/user\";\nimport { Loader } from \"./Loader\";\n\nexport default function AllUsers() {\n    const [users, setUsers] = useState<User[]>([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const LIMIT = 10;\n    const [skip, setSkip] = useState(0);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        const passingYear = Number(searchParams.get('passingYear'));\n        console.log({ passingYear });\n        getUsersApi({ passingYear, skip: skip, limit: LIMIT })\n            .then((users) => {\n                if (users.code === 200) {\n                    for (const user of users.data) {\n                        user.id = user._id;\n                    }\n                    setUsers(users.data);\n                }\n                else {\n                    setUsers([]);\n                }\n            })\n            .catch((err) => console.error(err))\n            .finally(() => setLoading(false));\n    }, [skip]);\n\n\n    let currRefId = 0;\n    return (\n        <div className=\"overflow-scroll p-4\">\n            {\n                users.map((user, index) => (\n                    <Link\n                        to={`/users/${user.id}`}\n                        className=\"flex items-center h-14 justify-left w-full font-medium text-center rounded-t-[48px]\"\n                    >\n                        <div className=\"w-8 h-8 pt-1 bg-[#E8F5F9] rounded-full text-center flex justify-center\" >{++currRefId}</div>\n                        <span className=\"px-4\">{user.name}</span>\n                    </Link>\n                ))\n            }\n            {\n                loading === true ?\n                    <Loader /> :\n                    (<div className=\"bg-[#20BB96] rounded-lg w-full p-3 text-center\"            >\n                        <button\n                            onClick={() => {\n                                setSkip(skip + LIMIT)\n                            }}\n                        > Show More\n                        </button>\n                    </div>)\n            }\n\n        </div>\n    )\n}","export function Loader({ message = 'অনুগ্রহপূর্বক অপেক্ষা করুন...' }: { message?: string }) {\n    return (\n        <div className=\"text-center text-sm\">\n            {message}\n        </div>\n    )\n}"],"names":["getUsersApi","params","authData","JSON","parse","localStorage","getItem","token","url","process","skip","limit","passingYear","userType","phone","name","userTags","fetcher","method","headers","users","AllUsers","useState","setUsers","useSearchParams","searchParams","setSkip","loading","setLoading","useEffect","Number","get","console","log","then","code","data","user","id","_id","catch","err","error","finally","currRefId","className","map","index","to","onClick","Loader","message"],"sourceRoot":""}