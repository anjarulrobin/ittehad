{"version":3,"file":"static/js/996.1c3087f9.chunk.js","mappings":"2NAGO,SAAeA,EAAsB,GAAD,+BAiB1C,8CAjBM,WAAqCC,GAAsB,kFAI9D,OAHMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,IACtDC,EAAgB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,MAClBC,EAAG,UAAMC,4BAAgC,0BAAgC,YAAdR,EAAKS,MAAsB,YAC5F,UAEuDC,EAAAA,EAAAA,GAAQH,EAC3D,CACII,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAD,OAAYN,IAE/BN,KAAME,KAAKW,UAAU,CAAEC,MAAOd,EAAKc,MAAOC,QAASf,EAAKe,QAASN,KAAMT,EAAKS,SAC9E,OARwC,OAAxCO,EAAwC,yBAUvCA,GAAY,4CACtB,sB,uBCdc,SAASC,IACpB,OAAwCC,EAAAA,EAAAA,UAA2B,CAAEH,QAAS,GAAID,MAAO,GAAIL,KAAM,YAAY,eAAxGO,EAAY,KAAEG,EAAe,KAC9BC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCH,EAAAA,EAAAA,UAA+C,CAAEI,MAAM,EAAOC,QAAS,KAAK,eAAvGC,EAAS,KAAEC,EAAY,KAC9B,GAA8BP,EAAAA,EAAAA,WAAS,GAAM,eAAtCQ,EAAO,KAAEC,EAAU,KAEpBC,EAAY,yCAAG,WAAOC,GAA8B,sEACtDA,EAAGC,iBACHH,GAAW,GACX5B,EAAsBiB,GACjBe,MAAK,SAACC,GACe,MAAdA,EAAKC,KACLb,EAAS,gBAAiB,CAAEc,SAAS,IAGrCT,EAAa,CAAEH,MAAM,EAAMC,QAAS,CAACS,EAAKG,OAASH,EAAKI,SAAW,4BAE3E,IACCC,OAAM,SAACC,GAAG,OAAKC,QAAQJ,MAAMG,EAAI,IACjCE,SAAQ,kBAAMb,GAAW,EAAM,IAAC,2CACxC,gBAdiB,sCAgBlB,OACI,iBAAKc,UAAU,MAAK,WAChB,cAAGA,UAAU,2BAA0B,yCACvC,gBAAKA,UAAU,sBAAqB,UAChC,kBAAMA,UAAU,GAAGC,OAAO,IAAIC,SAAUf,EAAa,WACjD,gBAAKa,UAAU,GAAE,UACb,qBACIG,KAAK,QACLC,SAAU,SAAChB,GAAE,OAAKV,GAAgB,kBAAKH,GAAY,IAAEF,MAAOe,EAAGiB,OAAOC,QAAQ,EAC9EN,UAAU,8DACVO,YAAY,6CACZD,MAAO/B,EAAaF,MACpBmC,UAAU,OAGlB,gBAAKR,UAAU,GAAE,UACb,qBACIG,KAAK,UACLC,SAAU,SAAChB,GAAE,OAAKV,GAAgB,kBAAKH,GAAY,IAAED,QAASc,EAAGiB,OAAOC,QAAQ,EAChFN,UAAU,8DACVO,YAAY,oCACZD,MAAO/B,EAAaD,QACpBkC,UAAU,MAIdzB,EAAUF,OACN,iBACImB,UAAU,mCAAkC,cAAGjB,EAAUD,YAIxD,IAAZG,GAAmB,SAACwB,EAAA,EAAM,KACtB,gBAAKT,UAAU,mCAAkC,UAC9C,mBAAQhC,KAAK,SAASgC,UAAU,2BAA0B,2BAUtF,C,oECxEO,SAASS,EAAO,GAAsE,IAAD,IAAnEd,QAAAA,OAAO,MAAG,wJAA+B,EAC9D,OACI,gBAAKK,UAAU,sBAAqB,SAC/BL,GAGb,C","sources":["apis/createAnnouncementApi.ts","components/CreateAnnouncement.tsx","components/Loader.tsx"],"sourcesContent":["import { AnnouncementBody, AnnouncementCreateResponse } from \"../types/announcements\";\nimport { fetcher } from \"../utils/fetcher\";\n\nexport async function createAnnouncementApi(body: AnnouncementBody): Promise<AnnouncementCreateResponse> {\n    const authData = JSON.parse(localStorage.getItem('auth') || '');\n    const token = authData?.token;\n    const url = `${process.env.REACT_APP_API_ORIGIN}/announcements/${body.type === 'GENERAL' && '/general'}`;\n    // const url = `https://wild-tan-meerkat-robe.cyclic.app/api/groups/posts/${body.postId}/comments`;\n\n    const announcement: AnnouncementCreateResponse = await fetcher(url,\n        {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ title: body.title, content: body.content, type: body.type }),\n        })\n\n    return announcement;\n}","import { FormEvent, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport { createAnnouncementApi } from \"../apis/createAnnouncementApi\";\nimport { AnnouncementBody } from \"../types/announcements\";\nimport { Loader } from \"./Loader\";\n\nexport default function CreateAnnouncement() {\n    const [announcement, setAnnouncement] = useState<AnnouncementBody>({ content: '', title: '', type: 'GENERAL' });\n    const navigate = useNavigate();\n    const [authError, setAuthError] = useState<{ flag: boolean, details: string[] }>({ flag: false, details: [] });\n    const [loading, setLoading] = useState(false);\n\n    const handleSubmit = async (ev: FormEvent<HTMLFormElement>) => {\n        ev.preventDefault();\n        setLoading(true);\n        createAnnouncementApi(announcement)\n            .then((data) => {\n                if (data.code === 200) {\n                    navigate('/announcement', { replace: true });\n                }\n                else {\n                    setAuthError({ flag: true, details: [data.error || data.message || 'Failed to send message!'] });\n                }\n            })\n            .catch((err) => console.error(err))\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <div className=\"m-2\">\n            <p className=\"mb-2 text-lg text-center\"> এলান </p>\n            <div className=\"flex justify-center\">\n                <form className=\"\" action=\"#\" onSubmit={handleSubmit}>\n                    <div className=\"\">\n                        <textarea\n                            name=\"title\"\n                            onChange={(ev) => setAnnouncement({ ...announcement, title: ev.target.value })}\n                            className=\"border border-[#20BB96] p-1 rounded-lg h-16 m-1 text-center\"\n                            placeholder=\"শিরোনাম\"\n                            value={announcement.title}\n                            required={true}\n                        />\n                    </div>\n                    <div className=\"\">\n                        <textarea\n                            name=\"content\"\n                            onChange={(ev) => setAnnouncement({ ...announcement, content: ev.target.value })}\n                            className=\"border border-[#20BB96] p-1 rounded-lg h-52 m-1 text-center\"\n                            placeholder=\"ঘোষণা...\"\n                            value={announcement.content}\n                            required={true}\n                        />\n                    </div>\n                    {\n                        authError.flag && (\n                            <div\n                                className=\"text-red-400 text-xs text-center\"> {authError.details}\n                            </div>\n                        )\n                    }\n                    {loading === true ? <Loader /> :\n                        (<div className=\"m-2 mt-4 bg-[#20BB96] rounded-lg\"                    >\n                            <button type=\"submit\" className=\"p-1.5 text-center w-full\"                        >\n                                Send\n                            </button>\n                        </div>)\n                    }\n                </form>\n            </div>\n        </div>\n\n    )\n}","export function Loader({ message = 'অনুগ্রহপূর্বক অপেক্ষা করুন...' }: { message?: string }) {\n    return (\n        <div className=\"text-center text-sm\">\n            {message}\n        </div>\n    )\n}"],"names":["createAnnouncementApi","body","authData","JSON","parse","localStorage","getItem","token","url","process","type","fetcher","method","headers","stringify","title","content","announcement","CreateAnnouncement","useState","setAnnouncement","navigate","useNavigate","flag","details","authError","setAuthError","loading","setLoading","handleSubmit","ev","preventDefault","then","data","code","replace","error","message","catch","err","console","finally","className","action","onSubmit","name","onChange","target","value","placeholder","required","Loader"],"sourceRoot":""}