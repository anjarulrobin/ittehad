{"version":3,"file":"static/js/931.7941e63c.chunk.js","mappings":"2NAmBC,8CAhBM,WAAmCA,GAAqC,kFAIiD,OAHtHC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,IACtDC,EAAgB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,MAElBC,EAAG,UAAMC,+CAAgC,gCAAwBR,EAAOS,KAAI,kBAAUT,EAAOU,MAAK,iBAASV,EAAOW,MAAI,UAEtEC,EAAAA,EAAAA,GAAQL,EAC1D,CACIM,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAD,OAAYR,MAEjC,OAPuC,OAAvCS,EAAuC,yBAStCA,GAAa,4CACvB,sBCnBM,SAASC,IACZ,IAAMC,EAAOf,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,IACxD,OAAOY,GAAQ,CAAC,QAAS,cAAcC,SAASD,EAAKE,KACzD,C,uBCIe,SAASC,IACpB,OAA0CC,EAAAA,EAAAA,UAAiC,IAAG,eAAvEN,EAAa,KAAEO,EAAgB,KAmBtC,OAjBAC,EAAAA,EAAAA,YAAU,YFPP,SAAmC,GAAD,gCEQjCC,CAAoB,CAAEd,MAAO,GAAID,KAAM,EAAGE,KAAM,YAC3Cc,MAAK,SAACV,GACH,GAA2B,MAAvBA,EAAcW,KAAc,CAAC,IACgB,EADjB,UACDX,EAAcY,MAAI,IAA7C,2BAA+C,CAAC,IAArCC,EAAY,QACnBA,EAAaC,GAAKD,EAAaE,GACnC,CAAC,+BACDR,EAAiBP,EAAcY,KACnC,MAEIL,EAAiB,GAEzB,IACCS,OAAM,SAACC,GAAG,OAAKC,QAAQC,MAAMF,EAAI,GAC1C,GAAG,KAIC,iBAAKG,UAAU,MAAK,UAEZnB,MAAiB,gBAAKmB,UAAU,OAAM,UAClC,UAAC,KAAI,CAACA,UAAU,4DACZC,GAAG,uBAAsB,WAEzB,cAAGD,UAAU,iCAAgC,+DAC7C,gBAAKA,UAAU,0BAA0BE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAc,UAC/I,iBAAMC,cAAc,QAAQC,eAAe,QAAQC,EAAE,iQAMjE7B,EAAc8B,KAAI,SAACjB,GAAY,OAC3B,iBAA2BO,UAAU,MAAK,WACtC,eAAGA,UAAU,UAAS,eAAGW,EAAAA,EAAAA,GAAclB,EAAamB,eACpD,eAAGZ,UAAU,0DAAyD,cAAGP,EAAaoB,MAAK,QAC3F,cAAGb,UAAU,0CAAyC,SACjDP,EAAaqB,WAGlB,gBAAKd,UAAU,mBAAkB,UAC7B,SAAC,KAAI,CAACC,GAAE,wBAAmBR,EAAaC,IAAK,UACzC,cAAGM,UAAU,+BAA8B,qEAT7CP,EAAaC,GAcjB,MAK1B,C,oEC9DMqB,EAAY,CACd,yDAAa,qEAAe,iCAAS,uCACrC,eAAM,qBAAO,iCAAS,iCACtB,+DAAc,6CAAW,6CAAW,oDAGjC,SAASJ,EAAcK,GAE1B,IAAMC,GADND,EAAO,IAAIE,KAAKF,IACGG,WACnB,EAA+BH,EAAKI,cAAcC,MAAM,KAAI,eAArDC,EAAI,KACX,GADe,KAAY,KACHD,MAAM,MAAvBE,GAA2B,YAAzB,GACT,MAAM,GAAN,OAAUA,EAAE,YAAIR,EAAUE,GAAM,aAAKK,EACzC,C","sources":["apis/getAnnouncements.ts","utils/isAdminUser.ts","components/Announcements.tsx","components/utils/getBanglaDate.ts"],"sourcesContent":["import { AnnouncementListRequestParams, AnnouncementListResponse } from \"../types/announcements\";\nimport { fetcher } from \"../utils/fetcher\";\n\nexport async function getAnnouncementsApi(params: AnnouncementListRequestParams): Promise<AnnouncementListResponse> {\n    const authData = JSON.parse(localStorage.getItem('auth') || '');\n    const token = authData?.token;\n    // const url = `https://wild-tan-meerkat-robe.cyclic.app/api/announcements/?skip=${params.skip}&limit=${params.limit}`;\n    const url = `${process.env.REACT_APP_API_ORIGIN}/announcements/?skip=${params.skip}&limit=${params.limit}&type=${params.type}`;\n\n    const announcements: AnnouncementListResponse = await fetcher(url,\n        {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n\n    return announcements;\n}","export function isAdminUser() {\n    const user = JSON.parse(localStorage.getItem('user') || \"\");\n    return user && ['admin', 'superadmin'].includes(user.role);\n}","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAnnouncementsApi } from \"../apis/getAnnouncements\";\nimport { AnnouncementResponse } from \"../types/announcements\";\nimport { isAdminUser } from \"../utils/isAdminUser\";\nimport { getBanglaDate } from \"./utils/getBanglaDate\";\n\nexport default function Announcements() {\n    const [announcements, setAnnouncements] = useState<AnnouncementResponse[]>([]);\n\n    useEffect(() => {\n        getAnnouncementsApi({ limit: 15, skip: 0, type: 'GENERAL' })\n            .then((announcements) => {\n                if (announcements.code === 200) {\n                    for (const announcement of announcements.data) {\n                        announcement.id = announcement._id;\n                    }\n                    setAnnouncements(announcements.data);\n                }\n                else {\n                    setAnnouncements([]);\n                }\n            })\n            .catch((err) => console.error(err));\n    }, []);\n\n\n    return (\n        <div className=\"m-2\">\n            {\n                isAdminUser() && <div className=\"mb-2\"                >\n                    <Link className=\"m-2 mb-3 flex justify-between border-b-2 border-[#20BB96]\"\n                        to=\"/announcement/create\"\n                    >\n                        <p className=\"mr-2 text-center text-gray-400\"> এলান দিন ...</p>\n                        <svg className=\"w-6 h-6  text-[#20BB96]\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\" />\n                        </svg>\n                    </Link>\n                </div>\n            }\n            {\n                announcements.map((announcement) => (\n                    <div key={announcement.id} className=\"m-4\">\n                        <p className=\"text-sm\"> {getBanglaDate(announcement.createdAt)}</p>\n                        <p className=\"text-md font-semibold border-b-[1px] border-b-[#20BB96]\"> {announcement.title} </p>\n                        <p className=\"mt-2 h-14 text-ellipsis overflow-hidden\">\n                            {announcement.content}\n                        </p>\n\n                        <div className=\"flex justify-end\">\n                            <Link to={`/announcement/${announcement.id}`} >\n                                <p className=\"w-fit text-sm text-[#20BB96]\">\n                                    আরো দেখুন\n                                </p>\n                            </Link>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}","const monthList = [\n    'জানুয়ারী', 'ফেব্রুয়ারী', 'মার্চ', 'এপ্রিল',\n    'মে', 'জুন', 'জুলাই', 'আগস্ট',\n    'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'\n]\n\nexport function getBanglaDate(date: Date | string) {\n    date = new Date(date);\n    const month = date.getMonth();\n    const [yyyy, mm, ddWithTime] = date.toISOString().split('-');\n    const [dd] = ddWithTime.split('T');\n    return `${dd} ${monthList[month]}, ${yyyy}`;\n}"],"names":["params","authData","JSON","parse","localStorage","getItem","token","url","process","skip","limit","type","fetcher","method","headers","announcements","isAdminUser","user","includes","role","Announcements","useState","setAnnouncements","useEffect","getAnnouncementsApi","then","code","data","announcement","id","_id","catch","err","console","error","className","to","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","map","getBanglaDate","createdAt","title","content","monthList","date","month","Date","getMonth","toISOString","split","yyyy","dd"],"sourceRoot":""}