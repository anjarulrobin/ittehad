{"version":3,"file":"static/js/431.c4c9e6c6.chunk.js","mappings":"mKAIO,SAAeA,EAAY,GAAD,+BAsChC,8CAtCM,WAA2BC,GAA6B,4EA+B3D,OA9BMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,IACtC,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUK,MAEjB,UAAMC,4BAAgC,2BAAmBP,EAAOQ,KAAI,kBAAUR,EAAOS,OACxFT,EAAOU,aACJ,uBAAoBV,EAAOU,aAE9BV,EAAOW,UACJ,oBAAiBX,EAAOW,UAE3BX,EAAOY,OACJ,iBAAcZ,EAAOY,OAExBZ,EAAOa,MACJ,gBAAab,EAAOa,MAGvBb,EAAOc,UACJ,oBAAiBd,EAAOc,UAY/B,kBACQ,CACJ,KAAQ,IACR,QAAW,UAEX,KAAQC,EAAAA,IACX,4CACJ,sB,oHCtCc,SAASC,IACpB,OAA0BC,EAAAA,EAAAA,UAAiB,IAAG,eAAvCC,EAAK,KAAEC,EAAQ,MAEtBC,EAAAA,EAAAA,YAAU,YACNrB,EAAAA,EAAAA,GAAY,CAAEU,MAAO,GAAID,KAAM,EAAGE,YAAa,KAAMC,SAAU,YAC1DU,MAAK,SAACH,GACH,GAAmB,MAAfA,EAAMI,KAAc,CAAC,IACQ,EADT,UACDJ,EAAMK,MAAI,IAA7B,2BAA+B,CAAC,IAArBC,EAAI,QACXA,EAAKC,GAAKD,EAAKE,GACnB,CAAC,+BACDP,EAASD,EAAMK,KACnB,MAEIJ,EAAS,GAEjB,IACCQ,OAAM,SAACC,GAAG,OAAKC,QAAQC,MAAMF,EAAI,GAC1C,GAAG,IAGH,IAAMG,GAAUC,EAAAA,EAAAA,QAAqB,IAC/BC,GAAoBD,EAAAA,EAAAA,QAAsB,IAE5CE,EAAY,EAChB,OACI,iBAAKC,UAAU,MAAK,WAChB,cAAGA,UAAU,iCAAgC,wBAEzCjB,EAAMkB,KAAI,SAACZ,EAAMa,GAAK,OAClB,iBAEIF,UAAU,2GAA0G,WAEpH,cAAGV,GAAE,qCAAgCD,EAAKC,IAAK,UAC3C,oBACIa,KAAK,SACLC,QAAS,WAAO,IAAD,IACNN,EAAkBO,QAAQH,GAAOI,MAAMC,SAA8D,SAAnDT,EAAkBO,QAAQH,GAAOI,MAAMC,QAI1FT,EAAkBO,QAAQH,GAAOI,MAAMC,QAAU,OAHjDT,EAAkBO,QAAQH,GAAOI,MAAMC,QAAU,QAK1B,QAAvB,EAACX,EAAQS,QAAQH,UAAM,OAAtB,EAAwBI,MAAME,WAAyD,kBAAtB,QAAtB,EAAAZ,EAAQS,QAAQH,UAAM,aAAtB,EAAwBI,MAAME,YAK1EZ,EAAQS,QAAQH,GAAOI,MAAME,UAAY,eACzCZ,EAAQS,QAAQH,GAAOI,MAAMG,WAAa,yBAL1Cb,EAAQS,QAAQH,GAAOI,MAAME,UAAY,iBACzCZ,EAAQS,QAAQH,GAAOI,MAAMG,WAAa,uBAMlD,EACAT,UAAU,sEACV,2DAAmDX,EAAKC,IACxD,gBAAc,OACd,mDAA2CD,EAAKC,IAAK,WACrD,iBAAMU,UAAU,OAAM,SAAEX,EAAKX,QAC7B,gBAEIgC,IAAK,SAACC,GAAmB,OAAKf,EAAQS,QAAQN,GAAaY,CAAO,EAElE,yBACAX,UAAU,4BACVY,KAAK,eACLC,QAAQ,YACRC,MAAM,6BAA4B,UAClC,iBACIC,SAAS,UACTC,EAAE,qHACFC,SAAS,oBAKzB,gBACI3B,GAAE,kCAA6BD,EAAKC,IAEpCoB,IAAK,SAACC,GAAoB,OAAKb,EAAkBO,QAAQN,KAAeY,CAAO,EAC/EX,UAAU,SACV,uDAA+CX,EAAKC,IAAK,UACzD,gBAAKU,UAAU,oDAAmD,UAC9D,kBAAOA,UAAU,+DAA8D,UAC3E,mBAAOA,UAAU,GAAE,WACf,gBAAIA,UAAU,cAAa,WACvB,eAAIA,UAAU,GAAE,qBAChB,eAAIA,UAAU,GAAE,SAAEX,EAAKZ,YAE3B,gBAAIuB,UAAU,cAAa,WACvB,eAAIA,UAAU,GAAE,oBAChB,eAAIA,UAAU,GAAE,SAAEX,EAAKb,eAE3B,gBAAIwB,UAAU,cAAa,WACvB,eAAIA,UAAU,GAAE,4BAChB,eAAIA,UAAU,GAAE,SAAEX,EAAKd,kBAE3B,gBAAIyB,UAAU,cAAa,WACvB,eAAIA,UAAU,GAAE,+BAChB,eAAIA,UAAU,GAAE,mBAAKX,EAAK6B,eAAeC,QAAO,aAAK9B,EAAK6B,eAAeE,KAAI,aAAK/B,EAAK6B,eAAeG,QAAQC,QAAO,aAAKjC,EAAK6B,eAAeK,SAASD,yBAnEtKjC,EAAKC,GAyER,KAGd,gBAAKU,UAAU,gDAA+C,UAC1D,mBACII,QAAS,WACL,EACF,6BAMtB,C,mECvHe,SAASoB,EAA2BC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,OAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEO,OAAqB,CAC/GL,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EACJC,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAEO,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNC,MAAOb,EAAEQ,KAEb,EACAM,EAAG,SAAWC,GACZ,MAAMA,CACR,EACAC,EAAGP,EAEP,CACA,MAAM,IAAIQ,UAAU,wIACtB,CACA,IAEEjD,EAFEkD,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLT,EAAG,WACDR,EAAKA,EAAGkB,KAAKpB,EACf,EACAW,EAAG,WACD,IAAIU,EAAOnB,EAAGoB,OAEd,OADAJ,EAAmBG,EAAKT,KACjBS,CACT,EACAP,EAAG,SAAWS,GACZJ,GAAS,EACTnD,EAAMuD,CACR,EACAP,EAAG,WACD,IACOE,GAAoC,MAAhBhB,EAAW,QAAWA,EAAW,QAG5D,CAFE,QACA,GAAIiB,EAAQ,MAAMnD,CACpB,CACF,EAEJ,C","sources":["apis/getUsers.ts","components/Teachers.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { UserListRequestParams, UserListResponse } from \"../types/user\";\nimport { fetcher } from \"../utils/fetcher\";\nimport { UserData } from \"./user-data\";\n\nexport async function getUsersApi(params: UserListRequestParams): Promise<UserListResponse> {\n    const authData = JSON.parse(localStorage.getItem('auth') || '');\n    const token = authData?.token;\n\n    let url = `${process.env.REACT_APP_API_ORIGIN}/users/all?skip=${params.skip}&limit=${params.limit}`;\n    if (params.passingYear) {\n        url += `&passingYear=${params.passingYear}`;\n    }\n    if (params.userType) {\n        url += `&userType=${params.userType}`;\n    }\n    if (params.phone) {\n        url += `&phone=${params.phone}`;\n    }\n    if (params.name) {\n        url += `&name=${params.name}`;\n    }\n\n    if (params.userTags) {\n        url += `&userTags=${params.userTags}`;\n    }\n\n    // const users: UserListResponse = await fetcher(url,\n    //     {\n    //         method: 'GET',\n    //         headers: {\n    //             'Content-type': 'application/json',\n    //             'Authorization': `Bearer ${token}`\n    //         }\n    //     })\n\n    // return users;\n    return ({\n        \"code\": 200,\n        \"message\": \"SUCCESS\",\n        // @ts-ignore\n        \"data\": UserData\n    })\n}","import { useEffect, useRef, useState } from \"react\";\nimport { getUsersApi } from \"../apis/getUsers\";\nimport { User } from \"../types/user\";\n\nexport default function Teachers() {\n    const [users, setUsers] = useState<User[]>([]);\n\n    useEffect(() => {\n        getUsersApi({ limit: 15, skip: 0, passingYear: 2020, userType: 'teacher' })\n            .then((users) => {\n                if (users.code === 200) {\n                    for (const user of users.data) {\n                        user.id = user._id;\n                    }\n                    setUsers(users.data);\n                }\n                else {\n                    setUsers([]);\n                }\n            })\n            .catch((err) => console.error(err));\n    }, []);\n\n\n    const svgRefs = useRef<SVGElement[]>([]);\n    const accordianBodyRefs = useRef<HTMLElement[]>([]);\n\n    let currRefId = 0;\n    return (\n        <div className=\"p-4\">\n            <p className=\"text-center h-5 text-green-300\"> Teachers </p>\n            {\n                users.map((user, index) => (\n                    <div\n                        key={user.id}\n                        className=\"m-4 rounded-xl text-white bg-gray-200 shadow-lg shadow-gray-900/80 border-solid border-2 border-gray-600\"\n                    >\n                        <p id={`accordion-collapse-heading-${user.id}`}>\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    if (!accordianBodyRefs.current[index].style.display || accordianBodyRefs.current[index].style.display === 'none') {\n                                        accordianBodyRefs.current[index].style.display = 'block';\n                                    }\n                                    else {\n                                        accordianBodyRefs.current[index].style.display = 'none';\n                                    }\n                                    if (!svgRefs.current[index]?.style.transform || svgRefs.current[index]?.style.transform === 'rotate(0deg)') {\n                                        svgRefs.current[index].style.transform = 'rotate(180deg)';\n                                        svgRefs.current[index].style.transition = 'transform 150ms ease'; // smooth transition\n                                    }\n                                    else {\n                                        svgRefs.current[index].style.transform = 'rotate(0deg)';\n                                        svgRefs.current[index].style.transition = 'transform 150ms ease'; // smooth transition\n                                    }\n                                }}\n                                className=\"flex items-center h-20 justify-between w-full font-medium text-left\"\n                                data-accordion-target={`#accordion-collapse-body-${user.id}`}\n                                aria-expanded=\"true\"\n                                aria-controls={`#accordion-collapse-body-${user.id}`}>\n                                <span className=\"px-2\">{user.name}</span>\n                                <svg\n                                    /**@ts-ignore */\n                                    ref={(element: SVGElement) => svgRefs.current[currRefId] = element}\n\n                                    data-accordion-icon\n                                    className=\"w-6 h-6 rotate-0 shrink-0\"\n                                    fill=\"currentColor\"\n                                    viewBox=\"0 0 20 20\"\n                                    xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        fillRule=\"evenodd\"\n                                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                        clipRule=\"evenodd\">\n                                    </path>\n                                </svg>\n                            </button>\n                        </p>\n                        <div\n                            id={`accordion-collapse-body-${user.id}`}\n                            /**@ts-ignore */\n                            ref={(element: HTMLElement) => accordianBodyRefs.current[currRefId++] = element}\n                            className=\"hidden\"\n                            aria-labelledby={`accordion-collapse-heading-${user.id}`}>\n                            <div className=\"font-light border border-b-0 border-gray-200 flex\">\n                                <table className=\"p-2 w-full border-collapse border text-center justify-center\">\n                                    <tbody className=\"\">\n                                        <tr className=\"bg-cyan-700\">\n                                            <td className=\"\">Phone </td>\n                                            <td className=\"\">{user.phone}</td>\n                                        </tr>\n                                        <tr className=\"bg-cyan-700\">\n                                            <td className=\"\">Type </td>\n                                            <td className=\"\">{user.userType}</td>\n                                        </tr>\n                                        <tr className=\"bg-cyan-700\">\n                                            <td className=\"\">Passing year </td>\n                                            <td className=\"\">{user.passingYear}</td>\n                                        </tr>\n                                        <tr className=\"bg-cyan-700\">\n                                            <td className=\"\">Current Address </td>\n                                            <td className=\"\">{`${user.currentAddress.village}, ${user.currentAddress.post}, ${user.currentAddress.upzilla.bn_name}, ${user.currentAddress.district.bn_name}`}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                ))\n            }\n            <div className=\"bg-blue-200 rounded-lg w-full p-3 text-center\"            >\n                <button\n                    onClick={() => {\n                        // setUsers([...users, { id: String(users.length + 1), name: 'New member' }]);\n                    }}\n                > Show More </button>\n            </div>\n\n        </div>\n    )\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["getUsersApi","params","authData","JSON","parse","localStorage","getItem","token","process","skip","limit","passingYear","userType","phone","name","userTags","UserData","Teachers","useState","users","setUsers","useEffect","then","code","data","user","id","_id","catch","err","console","error","svgRefs","useRef","accordianBodyRefs","currRefId","className","map","index","type","onClick","current","style","display","transform","transition","ref","element","fill","viewBox","xmlns","fillRule","d","clipRule","currentAddress","village","post","upzilla","bn_name","district","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}